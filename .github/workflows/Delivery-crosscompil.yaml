name: Continous delivery

on:
  push:
    #branches: [ main ]

env:
  path: fprime/Ref
  delivery-path: ~/fsw/devops-crosscomp

jobs:
  build:
    runs-on: ubuntu-latest
    name: Cross-compile
    # https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-python
    steps:
      # checkout the repository
      - uses: actions/checkout@v2

      - name: prepare python pre-built environnement
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: test python is functionnal
        run: python -c "import sys; print(sys.version)"
      
      - name: Prepare dependencies python, cmake
        run: |
          python -m pip install --upgrade pip
          sudo apt install cmake -y

      #prepare (download & export variable) the RPI toolchain
      - name: Toolchain installation
        run: sudo git clone https://github.com/raspberrypi/tools.git /opt/rpi/

      # Init the virtual environnement (project script)
      - name: Prepare venv
        run: ./scripts/init-venv.sh

      # Build the project (project script)
      - name: Build the project
        run: ./scripts/build.sh ${path} raspberrypi
      
      # Upload build artifact for static analysis
      - name: Upload the Build final folder
        uses: actions/upload-artifact@v2
        with:
          name: Build
          path: ${{ env.path }}/build-artifacts

  delivery:
    needs: build
    runs-on: self-hosted
    name: Deliver
    steps:

      - name: download buld folder
        uses: actions/download-artifact@v2
        with:
          name: Build

      # Put the build-artifacts folder at the "latest"
      - name: Put version as latest
        run: |
          find "${{ env.delivery-path }}/latest/*" -delete || true
          cp -r build-artifacts ${{ env.delivery-path }}/latest

      #put the build-artifacts folder as archive
      - name: Put verson in archive
        run: cp -r build-artifacts ${{ env.delivery-path }}/archives/$(date +"%d_%m_%Y_%H:%M:%S")